{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the AfgAiHub platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "createdAt"
      ]
    },
    "QuranTutorInteraction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuranTutorInteraction",
      "type": "object",
      "description": "Represents a single interaction between a user and the QuranTutor AI agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the interaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who initiated the interaction. (Relationship: User 1:N QuranTutorInteraction)"
        },
        "query": {
          "type": "string",
          "description": "The user's query to the QuranTutor."
        },
        "response": {
          "type": "string",
          "description": "The response from the QuranTutor."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the interaction occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "query",
        "response",
        "timestamp"
      ]
    },
    "DoctorAssistantInteraction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DoctorAssistantInteraction",
      "type": "object",
      "description": "Represents a single interaction between a user and the DoctorAssistant AI agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the interaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who initiated the interaction. (Relationship: User 1:N DoctorAssistantInteraction)"
        },
        "query": {
          "type": "string",
          "description": "The user's query to the DoctorAssistant."
        },
        "response": {
          "type": "string",
          "description": "The response from the DoctorAssistant."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the interaction occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "query",
        "response",
        "timestamp"
      ]
    },
    "RealEstateAgentInteraction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "RealEstateAgentInteraction",
      "type": "object",
      "description": "Represents a single interaction between a user and the RealEstateAgent AI agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the interaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who initiated the interaction. (Relationship: User 1:N RealEstateAgentInteraction)"
        },
        "query": {
          "type": "string",
          "description": "The user's query to the RealEstateAgent."
        },
        "response": {
          "type": "string",
          "description": "The response from the RealEstateAgent."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the interaction occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "query",
        "response",
        "timestamp"
      ]
    },
    "AppPrototyperInteraction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AppPrototyperInteraction",
      "type": "object",
      "description": "Represents a single interaction between a user and the AppPrototyper AI agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the interaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who initiated the interaction. (Relationship: User 1:N AppPrototyperInteraction)"
        },
        "prompt": {
          "type": "string",
          "description": "The user's prompt to generate the app prototype."
        },
        "generatedCode": {
          "type": "string",
          "description": "The generated code of the app prototype."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the interaction occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "prompt",
        "generatedCode",
        "timestamp"
      ]
    },
    "AntiqueAuthenticatorInteraction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AntiqueAuthenticatorInteraction",
      "type": "object",
      "description": "Represents a single interaction between a user and the AntiqueAuthenticator AI agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the interaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who initiated the interaction. (Relationship: User 1:N AntiqueAuthenticatorInteraction)"
        },
        "imageUri": {
          "type": "string",
          "description": "URI of the image submitted for authentication.",
          "format": "uri"
        },
        "authenticationReport": {
          "type": "string",
          "description": "The authentication report generated by the AI."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the interaction occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "imageUri",
        "authenticationReport",
        "timestamp"
      ]
    },
    "PaymentSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PaymentSession",
      "type": "object",
      "description": "Represents a payment session created with HesabPay.",
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "Unique identifier for the payment session."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who initiated the payment. Optional for guest checkouts."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email of the user at the time of payment."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "price": { "type": "number" }
            },
            "required": ["id", "name", "price"]
          }
        },
        "status": {
          "type": "string",
          "enum": ["pending", "success", "failed"],
          "description": "The status of the payment."
        },
        "paymentUrl": {
          "type": "string",
          "format": "uri",
          "description": "The HesabPay URL to complete the payment."
        },
        "guest": {
          "type": "boolean",
          "description": "Flag indicating if the payment was made by a guest."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the payment session was created."
        }
      },
      "required": ["sessionId", "items", "status", "paymentUrl", "createdAt"]
    },
    "PaymentDistribution": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PaymentDistribution",
      "type": "object",
      "description": "Represents a multi-vendor payment distribution.",
      "properties": {
        "txnId": {
          "type": "string",
          "description": "Unique identifier for the distribution transaction."
        },
        "vendors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "account_number": { "type": "string" },
              "amount": { "type": "number" }
            },
            "required": ["account_number", "amount"]
          }
        },
        "status": {
          "type": "string",
          "enum": ["completed", "failed"],
          "description": "The status of the distribution."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the distribution was initiated."
        }
      },
      "required": ["txnId", "vendors", "status", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": { "$ref": "#/backend/entities/User" },
          "description": "Stores user profiles."
        }
      },
      {
        "path": "/payments/sessions/{sessionId}",
        "definition": {
          "entityName": "PaymentSession",
          "schema": { "$ref": "#/backend/entities/PaymentSession" },
          "description": "Stores HesabPay payment session details."
        }
      },
      {
        "path": "/payments/distributions/{txnId}",
        "definition": {
          "entityName": "PaymentDistribution",
          "schema": { "$ref": "#/backend/entities/PaymentDistribution" },
          "description": "Logs multi-vendor payment distribution transactions."
        }
      }
    ]
  }
}
